{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AttendanceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/attendance'; // Update with your backend API URL\n  }\n\n  saveAttendance(attendanceData) {\n    return this.http.post(this.apiUrl, attendanceData);\n  }\n  getTotalAttendanceCount(studentId, courseName) {\n    const url = `${this.apiUrl}/total-count`;\n    return this.http.get(url, {\n      params: {\n        studentId: studentId,\n        courseName: courseName\n      }\n    });\n  }\n  getTotalPresentAttendanceCount(studentId, courseName) {\n    const url = `${this.apiUrl}/present-count`;\n    return this.http.get(url, {\n      params: {\n        studentId: studentId,\n        courseName: courseName\n      }\n    });\n  }\n  getOverallAttendanceCount(studentId) {\n    const url = `${this.apiUrl}/total-count`;\n    return this.http.get(url, {\n      params: {\n        studentId: studentId\n      }\n    });\n  }\n  getOverallPresentAttendanceCount(studentId) {\n    const url = `${this.apiUrl}/present-count`;\n    return this.http.get(url, {\n      params: {\n        studentId: studentId\n      }\n    });\n  }\n}\nAttendanceService.ɵfac = function AttendanceService_Factory(t) {\n  return new (t || AttendanceService)(i0.ɵɵinject(i1.HttpClient));\n};\nAttendanceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AttendanceService,\n  factory: AttendanceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,sCAAsC,CAAC,CAAC;EAEjB;;EAExCC,cAAc,CAACC,cAAmB;IAChC,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,MAAM,EAAEF,cAAc,CAAC;EACpD;EAEAG,uBAAuB,CAACC,SAAiB,EAAEC,UAAkB;IAC3D,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,MAAM,cAAc;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAASD,GAAG,EAAC;MAAEE,MAAM,EAAE;QAAEJ,SAAS,EAAEA,SAAS;QAAEC,UAAU,EAAEA;MAAU;IAAE,CAAE,CAAC;EAChG;EAEAI,8BAA8B,CAACL,SAAiB,EAAEC,UAAkB;IAClE,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,MAAM,gBAAgB;IAC1C,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAASD,GAAG,EAAC;MAAEE,MAAM,EAAE;QAAEJ,SAAS,EAAEA,SAAS;QAAEC,UAAU,EAAEA;MAAU;IAAE,CAAE,CAAC;EAChG;EAEAK,yBAAyB,CAACN,SAAiB;IACzC,MAAME,GAAG,GAAG,GAAG,IAAI,CAACJ,MAAM,cAAc;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAASD,GAAG,EAAC;MAAEE,MAAM,EAAE;QAAEJ,SAAS,EAAEA;MAAS;IAAC,CAAE,CAAC;EACvE;EAEAO,gCAAgC,CAACP,SAAiB;IAChD,MAAME,GAAG,GAAG,GAAG,IAAI,CAACJ,MAAM,gBAAgB;IAC1C,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAASD,GAAG,EAAC;MAAEE,MAAM,EAAE;QAAEJ,SAAS,EAAEA;MAAS;IAAC,CAAE,CAAC;EACvE;;AA3BWR,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAgB,SAAjBhB,iBAAiB;EAAAiB,YAFhB;AAAM","names":["AttendanceService","constructor","http","saveAttendance","attendanceData","post","apiUrl","getTotalAttendanceCount","studentId","courseName","url","get","params","getTotalPresentAttendanceCount","getOverallAttendanceCount","getOverallPresentAttendanceCount","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\dharm\\JavaFullStack\\angular\\student3\\src\\app\\services\\attendance.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttendanceService {\n  private apiUrl = 'http://localhost:8080/api/attendance'; // Update with your backend API URL\n\n  constructor(private http: HttpClient) { }\n\n  saveAttendance(attendanceData: any) {\n    return this.http.post(this.apiUrl, attendanceData);\n  }\n\n  getTotalAttendanceCount(studentId: number, courseName: string): Observable<number> {\n    const url = `${this.apiUrl}/total-count`;\n    return this.http.get<number>(url,{ params: { studentId: studentId, courseName: courseName } });\n  }\n\n  getTotalPresentAttendanceCount(studentId: number, courseName: string): Observable<number> {\n    const url = `${this.apiUrl}/present-count`;\n    return this.http.get<number>(url,{ params: { studentId: studentId, courseName: courseName } });\n  }\n\n  getOverallAttendanceCount(studentId: number): Observable<number> {\n    const url = `${this.apiUrl}/total-count`;\n    return this.http.get<number>(url,{ params: { studentId: studentId} });\n  }\n\n  getOverallPresentAttendanceCount(studentId: number): Observable<number> {\n    const url = `${this.apiUrl}/present-count`;\n    return this.http.get<number>(url,{ params: { studentId: studentId} });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}