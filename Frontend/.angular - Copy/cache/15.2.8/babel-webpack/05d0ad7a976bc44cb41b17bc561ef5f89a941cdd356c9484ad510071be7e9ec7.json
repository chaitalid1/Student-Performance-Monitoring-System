{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction FetchComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Login successful!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class FetchComponent {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n    this.isLoggedIn = false;\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n    this.myfield = \"\";\n  }\n  login() {\n    this.auth.login(this.loginForm.value).subscribe(success => {\n      console.log(\"Login Successful \", success);\n      this.isLoggedIn = true;\n      this.router.navigate(['dashboard']);\n    }, error => {\n      console.log(\"Login Failed\", error);\n    });\n  }\n  signUp() {\n    this.router.navigate(['dashboard']);\n  }\n  login1() {\n    this.authService.login1(this.loginForm.value).subscribe(user => {\n      if (user) {\n        console.log(\"Login Successful!\");\n        this.isLoggedIn = true;\n        this.router.navigate(['dashboard']);\n      } else {\n        console.log(\"Login Failed\");\n      }\n    });\n  }\n}\nFetchComponent.ɵfac = function FetchComponent_Factory(t) {\n  return new (t || FetchComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nFetchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchComponent,\n  selectors: [[\"app-fetch\"]],\n  decls: 21,\n  vars: 3,\n  consts: [[1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"username\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\"], [3, \"disabled\"], [4, \"ngIf\"], [3, \"click\"]],\n  template: function FetchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function FetchComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.login1();\n      });\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\")(5, \"label\");\n      i0.ɵɵtext(6, \"Email: *\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\");\n      i0.ɵɵtext(10, \"Password: *\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"button\", 4);\n      i0.ɵɵtext(14, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, FetchComponent_div_15_Template, 3, 0, \"div\", 5);\n      i0.ɵɵelementStart(16, \"div\")(17, \"p\");\n      i0.ɵɵtext(18, \"OR\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function FetchComponent_Template_button_click_19_listener() {\n        return ctx.signUp();\n      });\n      i0.ɵɵtext(20, \"Sign Up!!\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\".login-container[_ngcontent-%COMP%] {\\r\\n    width: 300px;\\r\\n    margin: 0 auto;\\r\\n    padding: 20px;\\r\\n    background-color: #f2f2f2;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n  label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  input[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 5px;\\r\\n    border-radius: 4px;\\r\\n    border: 1px solid #ccc;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    padding: 10px 20px;\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mZXRjaC9mZXRjaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGNBQWM7SUFDZCxhQUFhO0lBQ2IseUJBQXlCO0lBQ3pCLHNCQUFzQjtJQUN0QixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0VBQ3BCOztFQUVBOztJQUVFLFdBQVc7SUFDWCxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcclxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIH1cclxuICBcclxuICBidXR0b24ge1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICiB3DC,2BAAwB;IACjBA,iCAAiB;IAAAA,iBAAI;;;ADTpC,OAAM,MAAOC,cAAc;EAWzBC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,SAAI,GAAJD,IAAI;IAAuB,WAAM,GAANC,MAAM;IAVrD,eAAU,GAAG,KAAK;IAEX,cAAS,GAAG,IAAIP,SAAS,CAAC;MAC/BQ,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,KAAK,CAAC,CAAC;MACtEC,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,CAAC;KACpD,CAAC;IAEF,YAAO,GAAG,EAAE;EAGmD;EAE/DG,KAAK;IACH,IAAI,CAACN,IAAI,CAACM,KAAK,CAAC,IAAI,CAACC,SAAS,CAACC,KAAK,CAAC,CAACC,SAAS,CAACC,OAAO,IAAG;MACxDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,OAAO,CAAC;MACzC,IAAI,CAACG,UAAU,GAAG,IAAI;MACtB,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC,EACDC,KAAK,IAAG;MACNJ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEG,KAAK,CAAC;IACpC,CAAC,CAAC;EACJ;EAEAC,MAAM;IACJ,IAAI,CAACf,MAAM,CAACa,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;EAEAG,MAAM;IACJ,IAAI,CAACC,WAAW,CAACD,MAAM,CAAC,IAAI,CAACV,SAAS,CAACC,KAAK,CAAC,CAACC,SAAS,CAAEU,IAAS,IAAI;MACpE,IAAIA,IAAI,EAAE;QACRR,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC,IAAI,CAACC,UAAU,GAAG,IAAI;QACtB,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;OACpC,MAAM;QACLH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;;IAE/B,CAAC,CAAC;EACJ;;AAtCWd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3B3B,8BAA6B;MACKA;QAAA,OAAY4B,YAAQ;MAAA,EAAC;MAEnD5B,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MAEVA,2BAAK;MACMA,wBAAQ;MAAAA,iBAAQ;MACvBA,2BAAwD;MAC5DA,iBAAM;MACNA,2BAAK;MACMA,4BAAW;MAAAA,iBAAQ;MAC1BA,4BAAgE;MACpEA,iBAAM;MACNA,4BAAK;MACqCA,sBAAK;MAAAA,iBAAS;MAGxDA,iEAEM;MAENA,4BAAK;MACEA,mBAAE;MAAAA,iBAAI;MAQjBA,kCAA2B;MAAnBA;QAAA,OAAS4B,YAAQ;MAAA,EAAC;MAAC5B,0BAAS;MAAAA,iBAAS;;;MA7BvCA,eAAuB;MAAvBA,yCAAuB;MAabA,gBAA6B;MAA7BA,+CAA6B;MAGnCA,eAAgB;MAAhBA,qCAAgB","names":["FormGroup","FormControl","Validators","i0","FetchComponent","constructor","auth","router","username","required","email","password","login","loginForm","value","subscribe","success","console","log","isLoggedIn","navigate","error","signUp","login1","authService","user","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\dharm\\JavaFullStack\\angular\\student3\\src\\app\\components\\fetch\\fetch.component.ts","C:\\Users\\dharm\\JavaFullStack\\angular\\student3\\src\\app\\components\\fetch\\fetch.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-fetch',\n  templateUrl: './fetch.component.html',\n  styleUrls: ['./fetch.component.css']\n})\nexport class FetchComponent {\n  isLoggedIn = false;\n\n  public loginForm = new FormGroup({\n    username: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  });\n  \n  myfield = \"\";\n  authService: any;\n\n  constructor(private auth: AuthService, private router: Router){}\n\n  login(){\n    this.auth.login(this.loginForm.value).subscribe(success =>{\n      console.log(\"Login Successful \", success);\n      this.isLoggedIn = true;\n      this.router.navigate(['dashboard']);\n    },\n    error => {\n      console.log(\"Login Failed\", error);\n    });\n  }\n\n  signUp(){\n    this.router.navigate(['dashboard']);\n  }\n\n  login1(): void {\n    this.authService.login1(this.loginForm.value).subscribe((user: any) => {\n      if (user) {\n        console.log(\"Login Successful!\");\n        this.isLoggedIn = true;\n        this.router.navigate(['dashboard']);\n      } else {\n        console.log(\"Login Failed\")\n      }\n    });\n  }\n\n}\n","\n<div class=\"login-container\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login1()\">\n\n    <h2>Login</h2>\n\n        <div>\n            <label>Email: *</label>\n            <input id=\"name\" type=\"text\" formControlName=\"username\">\n        </div>\n        <div>\n            <label>Password: *</label>\n            <input id=\"password\" type=\"password\" formControlName=\"password\">\n        </div>\n        <div>\n            <button [disabled]=\"!loginForm.valid\">Login</button>\n        </div>\n\n        <div *ngIf=\"isLoggedIn\">\n            <p>Login successful!</p>\n        </div>\n          \n        <div>\n            <p>OR</p>\n        </div>\n          \n          \n\n\n    </form>\n\n    <button (click)=\"signUp()\">Sign Up!!</button>\n    \n</div>\n  <!-- [formGroup]=\"loginForm\" -->\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}