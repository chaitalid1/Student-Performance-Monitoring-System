{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nimport * as i2 from \"src/app/services/department.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class UpdateDepartmentComponent {\n  constructor(modalService, bsModalRef, departmentService, router, formBuilder) {\n    this.modalService = modalService;\n    this.bsModalRef = bsModalRef;\n    this.departmentService = departmentService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.departments = [];\n    this.showAddDepartment = false;\n    this.deptCreated = false;\n    this.showUpdateDepartment = false;\n    this.department = {\n      hod: '',\n      staffCount: 0,\n      phone: '',\n      email: '',\n      description: '',\n      deptId: 0,\n      deptName: ''\n    };\n    this.hod = '';\n    this.staffCount = 0;\n    this.phone = '';\n    this.email = '';\n    this.description = '';\n    this.deptId = 0;\n    this.deptName = '';\n    this.id = 0;\n    this.d = {\n      hod: '',\n      staffCount: 0,\n      phone: '',\n      email: '',\n      description: '',\n      deptId: 0,\n      deptName: ''\n    };\n  }\n  showDepartment() {\n    if (this.showAddDepartment == false) {\n      this.showAddDepartment = true;\n    } else this.showAddDepartment = false;\n  }\n  close() {\n    this.bsModalRef.hide();\n    this.router.navigate(['department']);\n  }\n  showUpdateForm(department) {\n    this.department = department;\n    console.log(department.deptId);\n    this.deptFormU = this.formBuilder.group({\n      'hod': [this.department.hod, Validators.required],\n      'staffCount': [this.department.staffCount, Validators.required],\n      'email': [this.department.email, Validators.required],\n      'description': [this.department.description, Validators.required],\n      'phone': [this.department.phone, Validators.required],\n      'deptName': [this.department.deptName, Validators.required],\n      'deptId': [this.department.deptId, Validators.required]\n    });\n    if (this.showUpdateDepartment == false) {\n      this.showUpdateDepartment = true;\n    } else this.showUpdateDepartment = false;\n  }\n  navBack() {\n    this.router.navigate(['dashboard']);\n  }\n  ngOnInit() {\n    this.deptForm = this.formBuilder.group({\n      hod: [null, Validators.required],\n      staffCount: [null, Validators.required],\n      email: [null, Validators.required],\n      description: [null, Validators.required],\n      phone: [null, Validators.required],\n      deptName: [null, Validators.required],\n      deptId: [null, Validators.required]\n    });\n    this.getDepartments();\n  }\n  getDepartments() {\n    this.departmentService.getDepartments().subscribe(departments => {\n      this.departments = departments;\n    }, error => {\n      console.log(error);\n    });\n  }\n  getDepartmentById(department) {\n    this.departmentService.getDepartmentById(department.deptId).subscribe(response => {\n      this.getDepartments();\n    }, error => {\n      console.log(error);\n    });\n  }\n  addDepartment(department) {\n    this.departmentService.addDepartment(department).subscribe(response => {\n      this.getDepartments();\n      console.log(\"Success\");\n    }, error => {\n      console.log(error);\n    });\n  }\n  updateDepartment(department) {\n    console.log(this.department.deptId);\n    this.d.deptId = department.deptId;\n    this.d.deptName = department.deptName;\n    this.d.description = department.description;\n    this.d.email = department.email;\n    this.d.hod = department.hod;\n    this.d.staffCount = department.staffCount;\n    this.d.phone = department.phone;\n    this.departmentService.updateDepartment(this.department.deptId, this.d).subscribe(response => {\n      this.getDepartments();\n      this.deptForm.reset();\n      alert(\"Department updated successfully!\");\n      console.log(this.department.deptId);\n      this.showUpdateForm(department);\n    }, error => {\n      console.log(error);\n    });\n  }\n  deleteDepartment(id) {\n    alert(\"Are you sure you want to delete this department?\");\n    this.departmentService.deleteDepartment(id).subscribe(response => {\n      this.getDepartments();\n    }, error => {\n      console.log(error);\n    });\n  }\n  createDepartment(department) {\n    this.departmentService.createDepartment(department).subscribe(createdDepartment => {\n      console.log('Department created successfully:', createdDepartment);\n      // this.getDepartments();\n      this.deptForm.reset();\n      alert(\"Department created successfully!\");\n      // this.showDepartment();\n      this.close();\n    }, error => {\n      console.log('Error occurred while creating department:', error);\n    });\n  }\n}\nUpdateDepartmentComponent.ɵfac = function UpdateDepartmentComponent_Factory(t) {\n  return new (t || UpdateDepartmentComponent)(i0.ɵɵdirectiveInject(i1.BsModalService), i0.ɵɵdirectiveInject(i1.BsModalRef), i0.ɵɵdirectiveInject(i2.DepartmentService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\nUpdateDepartmentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateDepartmentComponent,\n  selectors: [[\"app-update-department\"]],\n  decls: 47,\n  vars: 8,\n  consts: [[1, \"add-student-form\", 3, \"formGroup\", \"submit\"], [\"type\", \"number\", \"formControlName\", \"deptId\", \"name\", \"deptId\", \"required\", \"\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"hod\", \"name\", \"hod\", \"required\", \"\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"deptName\", \"name\", \"deptName\", \"required\", \"\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"value\"], [\"type\", \"number\", \"formControlName\", \"staffCount\", \"name\", \"staffCount\", \"required\", \"\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"description\", \"name\", \"description\", \"required\", \"\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"phone\", \"name\", \"phone\", \"required\", \"\", 3, \"value\"], [\"type\", \"submit\", 1, \"save-button\"]],\n  template: function UpdateDepartmentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Update Department\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function UpdateDepartmentComponent_Template_form_submit_2_listener() {\n        return ctx.updateDepartment(ctx.deptFormU.value);\n      });\n      i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"legend\");\n      i0.ɵɵtext(6, \"Department Details\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"tr\")(8, \"td\")(9, \"label\");\n      i0.ɵɵtext(10, \" Department ID: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"td\");\n      i0.ɵɵelement(12, \"input\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"tr\")(14, \"td\")(15, \"label\");\n      i0.ɵɵtext(16, \" HOD: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"td\");\n      i0.ɵɵelement(18, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"td\")(20, \"label\");\n      i0.ɵɵtext(21, \" Department Name: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"td\");\n      i0.ɵɵelement(23, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"td\")(25, \"label\");\n      i0.ɵɵtext(26, \" Email: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"td\");\n      i0.ɵɵelement(28, \"input\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"tr\")(30, \"td\")(31, \"label\");\n      i0.ɵɵtext(32, \" Staff Count: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"td\");\n      i0.ɵɵelement(34, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"td\")(36, \"label\");\n      i0.ɵɵtext(37, \" Description: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"td\");\n      i0.ɵɵelement(39, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"td\")(41, \"label\");\n      i0.ɵɵtext(42, \" Phone: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"td\");\n      i0.ɵɵelement(44, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(45, \"button\", 8);\n      i0.ɵɵtext(46, \"Save\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.deptFormU);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"value\", ctx.department.deptId);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"value\", ctx.department.hod);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.department.deptName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.department.email);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"value\", ctx.department.staffCount);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.department.description);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.department.phone);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\".modal[_ngcontent-%COMP%] {\\r\\n    z-index: 1050; \\r\\n    border: 1px solid gray;\\r\\n}\\r\\n  \\r\\n.modal-overlay[_ngcontent-%COMP%] {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    z-index: 1050; \\r\\n    background-color: rgba(141, 141, 141, 0.5); \\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n  \\r\\n.modal-dialog[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    z-index: 1060; \\r\\n    background-color: white;\\r\\n    margin: 10px;\\r\\n    padding: 10px;\\r\\n    border: 1px solid rgb(167, 167, 167);\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\n.modalBox[_ngcontent-%COMP%] {\\r\\n    margin: 1px;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #b5b5b5;\\r\\n    border-radius: 20px;\\r\\n    background-color: #a4d0ff;\\r\\n}\\r\\n\\r\\n.modal-header[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n\\r\\n.modal-title[_ngcontent-%COMP%] {\\r\\n    flex: 1;\\r\\n    margin-right: 1rem; \\r\\n}\\r\\n  \\r\\n.close[_ngcontent-%COMP%] {\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    padding: 0.5rem;\\r\\n    font-size: 1.5rem;\\r\\n    background: transparent;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.close[_ngcontent-%COMP%]:hover {\\r\\n\\r\\n    background: transparent;\\r\\n    border: 0.5 px solid gray;\\r\\n    cursor: pointer;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kZXBhcnRtZW50LW9wZXJhdGlvbnMvdXBkYXRlLWRlcGFydG1lbnQvdXBkYXRlLWRlcGFydG1lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWEsRUFBRSx1Q0FBdUM7SUFDdEQsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLE1BQU07SUFDTixPQUFPO0lBQ1AsV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhLEVBQUUsdUNBQXVDO0lBQ3RELDBDQUEwQyxFQUFFLHNEQUFzRDtJQUNsRyxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhLEVBQUUsMkVBQTJFO0lBQzFGLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osYUFBYTtJQUNiLG9DQUFvQztJQUNwQyxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixtQkFBbUI7SUFDbkIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiw4QkFBOEI7QUFDbEM7O0FBRUE7SUFDSSxPQUFPO0lBQ1Asa0JBQWtCLEVBQUUsaUNBQWlDO0FBQ3pEOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osZUFBZTtBQUNuQjs7QUFFQTs7SUFFSSx1QkFBdUI7SUFDdkIseUJBQXlCO0lBQ3pCLGVBQWU7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kYWwge1xyXG4gICAgei1pbmRleDogMTA1MDsgLyogQWRqdXN0IHRoZSB6LWluZGV4IHZhbHVlIGFzIG5lZWRlZCAqL1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcclxufVxyXG4gIFxyXG4ubW9kYWwtb3ZlcmxheSB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB6LWluZGV4OiAxMDUwOyAvKiBBZGp1c3QgdGhlIHotaW5kZXggdmFsdWUgYXMgbmVlZGVkICovXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE0MSwgMTQxLCAxNDEsIDAuNSk7IC8qQWRqdXN0IHRoZSBiYWNrZ3JvdW5kIGNvbG9yIGFuZCBvcGFjaXR5IGFzIGRlc2lyZWQgKi9cclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuICBcclxuLm1vZGFsLWRpYWxvZyB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB6LWluZGV4OiAxMDYwOyAvKiBBZGp1c3QgdGhlIHotaW5kZXggdmFsdWUgdG8gZW5zdXJlIHRoZSBtb2RhbCBhcHBlYXJzIGFib3ZlIHRoZSBvdmVybGF5ICovXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIG1hcmdpbjogMTBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMTY3LCAxNjcsIDE2Nyk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG59XHJcblxyXG4ubW9kYWxCb3gge1xyXG4gICAgbWFyZ2luOiAxcHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2I1YjViNTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTRkMGZmO1xyXG59XHJcblxyXG4ubW9kYWwtaGVhZGVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBmbGV4OiAxO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxcmVtOyAvKiBBZGp1c3QgdGhlIG1hcmdpbiBhcyBkZXNpcmVkICovXHJcbn1cclxuICBcclxuLmNsb3NlIHtcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgcGFkZGluZzogMC41cmVtO1xyXG4gICAgZm9udC1zaXplOiAxLjVyZW07XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmNsb3NlOmhvdmVyIHtcclxuXHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjogMC41IHB4IHNvbGlkIGdyYXk7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","UpdateDepartmentComponent","constructor","modalService","bsModalRef","departmentService","router","formBuilder","hod","staffCount","phone","email","description","deptId","deptName","showDepartment","showAddDepartment","close","hide","navigate","showUpdateForm","department","console","log","deptFormU","group","required","showUpdateDepartment","navBack","ngOnInit","deptForm","getDepartments","subscribe","departments","error","getDepartmentById","response","addDepartment","updateDepartment","d","reset","alert","deleteDepartment","id","createDepartment","createdDepartment","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\dharm\\JavaFullStack\\angular\\student3\\src\\app\\components\\department-operations\\update-department\\update-department.component.ts","C:\\Users\\dharm\\JavaFullStack\\angular\\student3\\src\\app\\components\\department-operations\\update-department\\update-department.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { Department } from 'src/app/models/department';\nimport { DepartmentService } from 'src/app/services/department.service';\n\n@Component({\n  selector: 'app-update-department',\n  templateUrl: './update-department.component.html',\n  styleUrls: ['./update-department.component.css']\n})\nexport class UpdateDepartmentComponent {\n  departments: Department[] = [];\n\n  students: any;\n  showAddDepartment = false;\n  deptCreated= false;\n  showUpdateDepartment = false;\n\n  department : Department = {hod:'',  staffCount: 0,  phone: '',  email: '',  description:'',  deptId:0,  deptName: ''};\n\n  hod = '';\n  staffCount = 0;\n  phone = '';\n  email = '';\n  description = '';\n  deptId = 0;\n  deptName = '';\n\n  id = 0;\n\n  constructor(private modalService: BsModalService, public bsModalRef: BsModalRef, private departmentService: DepartmentService, private router: Router, private formBuilder: FormBuilder) { \n\n  }\n\n  deptForm!: FormGroup;\n  deptFormU!: FormGroup;\n\n  showDepartment(){\n    if(this.showAddDepartment == false){\n      this.showAddDepartment = true;\n    }\n    else\n    this.showAddDepartment = false;\n\n  }\n\n  close() {\n    this.bsModalRef.hide();\n    this.router.navigate(['department'])\n  }\n  \n  showUpdateForm(department: Department){\n    this.department = department;\n    console.log(department.deptId);\n\n    this.deptFormU = this.formBuilder.group({\n      'hod': [this.department.hod, Validators.required],\n      'staffCount': [this.department.staffCount, Validators.required],\n      'email': [this.department.email, Validators.required],\n      'description': [this.department.description, Validators.required],\n      'phone': [this.department.phone, Validators.required],\n      'deptName': [this.department.deptName, Validators.required],\n      'deptId': [this.department.deptId, Validators.required],\n      \n    });\n    if(this.showUpdateDepartment == false){\n      this.showUpdateDepartment = true;\n    }\n    else\n    this.showUpdateDepartment = false;\n  }\n\n  navBack(){\n    this.router.navigate(['dashboard']);\n  }\n\n  ngOnInit() {\n    this.deptForm = this.formBuilder.group({\n      hod: [null, Validators.required],\n      staffCount: [null, Validators.required],\n      email: [null, Validators.required],\n      description: [null, Validators.required],\n      phone: [null, Validators.required],\n      deptName: [null, Validators.required],\n      deptId: [null, Validators.required],\n      \n    });\n    this.getDepartments();\n  }\n\n  getDepartments() {\n    this.departmentService.getDepartments().subscribe(\n      departments => {\n        this.departments = departments;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  getDepartmentById(department: Department){\n    this.departmentService.getDepartmentById(department.deptId).subscribe(\n      response => {\n        this.getDepartments();\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  addDepartment(department: Department) {\n    this.departmentService.addDepartment(department).subscribe(\n      response => {\n        this.getDepartments();\n        console.log(\"Success\");\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n\n  d: Department = {hod:'',  staffCount: 0,  phone: '',  email: '',  description:'',  deptId:0,  deptName: ''};\n\n  updateDepartment(department: Department) {\n\n    console.log(this.department.deptId);\n\n    this.d.deptId = department.deptId;\n    this.d.deptName = department.deptName;\n    this.d.description = department.description;\n    this.d.email = department.email;\n    this.d.hod = department.hod;\n    this.d.staffCount = department.staffCount;\n    this.d.phone = department.phone;\n\n    this.departmentService.updateDepartment(this.department.deptId , this.d)\n      .subscribe(response => {\n        this.getDepartments();\n        this.deptForm.reset();\n        alert(\"Department updated successfully!\");\n        console.log(this.department.deptId);\n        this.showUpdateForm(department);\n      }, error => {\n        console.log(error);\n      });\n  }\n\n\n  deleteDepartment(id: number) {\n    alert(\"Are you sure you want to delete this department?\");\n    this.departmentService.deleteDepartment(id).subscribe(\n      response => {\n        this.getDepartments();\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  createDepartment(department: Department) {\n    this.departmentService.createDepartment(department).subscribe(\n      createdDepartment => {\n        console.log('Department created successfully:', createdDepartment);\n        // this.getDepartments();\n        this.deptForm.reset();\n        alert(\"Department created successfully!\")\n        // this.showDepartment();\n        this.close()\n      },\n      error => {\n        console.log('Error occurred while creating department:', error);\n      }\n    );\n  }\n}\n","<h2>Update Department</h2>\n          <form (submit)=\"updateDepartment(deptFormU.value)\" [formGroup]=\"deptFormU\" class=\"add-student-form\">\n            \n              <table>\n                <tr>\n                  <legend>Department Details</legend>\n                </tr>\n                <tr>\n                  <td>\n                    <label>\n                      Department ID:\n                    </label>\n                  </td>\n                  <td>\n                    <input type=\"number\" formControlName=\"deptId\" name=\"deptId\" [value]=\"department.deptId\" required >\n                  </td>\n                </tr>\n                  \n                <tr>\n        \n                    <td>\n                      <label>\n                        HOD:\n                      </label>\n                    </td>\n                    <td>\n                      <input type=\"text\" formControlName=\"hod\" name=\"hod\" [value]=\"department.hod\" required >\n                    </td>\n                    <td>\n                      <label>\n                        Department Name:\n                      </label>\n                    </td>\n                    <td>\n                      <input type=\"text\" formControlName=\"deptName\" name=\"deptName\" [value]=\"department.deptName\" required>\n                    </td>\n                    <td>\n                      <label>\n                        Email:\n                      </label>\n                    </td>\n                    <td>\n                      <input type=\"text\" formControlName=\"email\" name=\"email\" [value]=\"department.email\" required>\n                    </td>\n                  \n                </tr>\n\n                <tr>\n        \n                  <td>\n                    <label>\n                      Staff Count:\n                    </label>\n                  </td>\n                  <td>\n                    <input type=\"number\" formControlName=\"staffCount\" name=\"staffCount\" [value]=\"department.staffCount\" required>\n                  </td>\n                  <td>\n                    <label>\n                      Description:\n                    </label>\n                  </td>\n                  <td>\n                    <input type=\"text\" formControlName=\"description\" name=\"description\" [value]=\"department.description\" required>\n                  </td>\n                  <td>\n                    <label>\n                      Phone:\n                    </label>\n                  </td>\n                  <td>\n                    <input type=\"text\" formControlName=\"phone\" name=\"phone\" [value]=\"department.phone\" required>\n                  </td>\n                  \n                \n              </tr>\n\n                \n                      \n              </table>\n\n            <button type=\"submit\" class=\"save-button\">Save</button>\n\n          </form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}