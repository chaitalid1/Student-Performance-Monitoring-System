{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = '/api/students'; // Replace with your backend API URL\n  }\n\n  getStudents() {\n    return this.http.get(this.apiUrl);\n  }\n  addStudent(student) {\n    return this.http.post(this.apiUrl, student);\n  }\n  getStudentById(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get(url);\n  }\n  updateStudent(id, student) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.put(url, student);\n  }\n  deleteStudent(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.delete(url);\n  }\n}\nStudentService.ɵfac = function StudentService_Factory(t) {\n  return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n};\nStudentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StudentService,\n  factory: StudentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,eAAe,CAAC,CAAC;EAEM;;EAExCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,IAAI,CAACC,MAAM,CAAC;EAC9C;EAEAC,UAAU,CAACC,OAAgB;IACzB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,IAAI,CAACH,MAAM,EAAEE,OAAO,CAAC;EACtD;EAEAE,cAAc,CAACC,EAAU;IACvB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACN,MAAM,IAAIK,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAUO,GAAG,CAAC;EACpC;EAEAC,aAAa,CAACF,EAAU,EAAEH,OAAgB;IACxC,MAAMI,GAAG,GAAG,GAAG,IAAI,CAACN,MAAM,IAAIK,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAUF,GAAG,EAAEJ,OAAO,CAAC;EAC7C;EAEAO,aAAa,CAACJ,EAAU;IACtB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACN,MAAM,IAAIK,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACa,MAAM,CAAOJ,GAAG,CAAC;EACpC;;AA1BWX,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgB,SAAdhB,cAAc;EAAAiB,YAFb;AAAM","names":["StudentService","constructor","http","getStudents","get","apiUrl","addStudent","student","post","getStudentById","id","url","updateStudent","put","deleteStudent","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\dharm\\JavaFullStack\\angular\\student3\\src\\app\\services\\student.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Student } from '../models/student';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  private apiUrl = '/api/students'; // Replace with your backend API URL\n\n  constructor(private http: HttpClient) { }\n\n  getStudents(): Observable<Student[]> {\n    return this.http.get<Student[]>(this.apiUrl);\n  }\n\n  addStudent(student: Student): Observable<Student> {\n    return this.http.post<Student>(this.apiUrl, student);\n  }\n\n  getStudentById(id: number): Observable<Student> {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get<Student>(url);\n  }\n\n  updateStudent(id: number, student: Student): Observable<Student> {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.put<Student>(url, student);\n  }\n\n  deleteStudent(id: number): Observable<void> {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.delete<void>(url);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}