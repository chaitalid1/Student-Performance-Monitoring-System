{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Login successful!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Login Failed!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginComponent {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n    this.isLoggedIn = false;\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n    this.myfield = \"\";\n    this.username = '';\n    this.password = '';\n    this.invalidLogin = false;\n  }\n  signUp() {\n    this.auth.signUp(this.loginForm.value).subscribe(success => {\n      console.log(\"Login Successful \", success);\n      this.isLoggedIn = true;\n      this.router.navigate(['dashboard']);\n    }, error => {\n      console.log(\"Login Failed\", error);\n    });\n  }\n  signUp1() {\n    this.router.navigate(['dashboard']);\n  }\n  // constructor(private router: Router,\n  //   private loginservice: AuthenticationService) { }\n  ngOnInit() {}\n  checkLogin() {\n    if (this.auth.authenticate(this.username, this.password)) {\n      this.router.navigate(['']);\n      this.invalidLogin = false;\n    } else this.invalidLogin = true;\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 17,\n  vars: 5,\n  consts: [[1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"username\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.checkLogin();\n      });\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\")(5, \"label\");\n      i0.ɵɵtext(6, \"Email: *\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\");\n      i0.ɵɵtext(10, \"Password: *\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\")(13, \"button\");\n      i0.ɵɵtext(14, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 3, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 3, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\".login-container[_ngcontent-%COMP%] {\\r\\n    width: 300px;\\r\\n    margin: 0 auto;\\r\\n    padding: 20px;\\r\\n    background-color: #f2f2f2;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n  label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  input[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 5px;\\r\\n    border-radius: 4px;\\r\\n    border: 1px solid #ccc;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    padding: 10px 20px;\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n    display: inline-block;\\r\\n    align-items: center;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGNBQWM7SUFDZCxhQUFhO0lBQ2IseUJBQXlCO0lBQ3pCLHNCQUFzQjtJQUN0QixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0VBQ3BCOztFQUVBOztJQUVFLFdBQVc7SUFDWCxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLHFCQUFxQjtJQUNyQixtQkFBbUI7RUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY29udGFpbmVyIHtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1ncm91cCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICBsYWJlbCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICB9XHJcbiAgXHJcbiAgaW5wdXRbdHlwZT1cInRleHRcIl0sXHJcbiAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICe3DC,2BAAwB;IACjBA,iCAAiB;IAAAA,iBAAI;;;;;IAIhCA,2BAAyB;IAClBA,6BAAa;IAAAA,iBAAI;;;ADT5B,OAAM,MAAOC,cAAc;EAWzBC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,SAAI,GAAJD,IAAI;IAAuB,WAAM,GAANC,MAAM;IATrD,eAAU,GAAG,KAAK;IAEX,cAAS,GAAG,IAAIP,SAAS,CAAC;MAC/BQ,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,KAAK,CAAC,CAAC;MACtEC,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,CAAC;KACpD,CAAC;IAEF,YAAO,GAAG,EAAE;IAmBZ,aAAQ,GAAG,EAAE;IACb,aAAQ,GAAG,EAAE;IACb,iBAAY,GAAG,KAAK;EAnB2C;EAE/DG,MAAM;IACJ,IAAI,CAACN,IAAI,CAACM,MAAM,CAAC,IAAI,CAACC,SAAS,CAACC,KAAK,CAAC,CAACC,SAAS,CAACC,OAAO,IAAG;MACzDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,OAAO,CAAC;MACzC,IAAI,CAACG,UAAU,GAAG,IAAI;MACtB,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC,EACDC,KAAK,IAAG;MACNJ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEG,KAAK,CAAC;IACpC,CAAC,CAAC;EACJ;EAEAC,OAAO;IACL,IAAI,CAACf,MAAM,CAACa,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;EAMA;EACA;EAEAG,QAAQ,IACR;EAEAC,UAAU;IACR,IAAI,IAAI,CAAClB,IAAI,CAACmB,YAAY,CAAC,IAAI,CAACjB,QAAQ,EAAE,IAAI,CAACG,QAAQ,CAAC,EACtD;MACA,IAAI,CAACJ,MAAM,CAACa,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1B,IAAI,CAACM,YAAY,GAAG,KAAK;KAC1B,MACC,IAAI,CAACA,YAAY,GAAG,IAAI;EAC5B;;AA7CWtB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd3B5B,8BAA6B;MACKA;QAAA,OAAY6B,gBAAY;MAAA,EAAC;MAEvD7B,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MAEVA,2BAAK;MACMA,wBAAQ;MAAAA,iBAAQ;MACvBA,gCAA+E;MAAvBA;QAAA;MAAA,EAAsB;MAA9EA,iBAA+E;MAEnFA,2BAAK;MACMA,4BAAW;MAAAA,iBAAQ;MAC1BA,iCAAuF;MAAvBA;QAAA;MAAA,EAAsB;MAAtFA,iBAAuF;MAE3FA,4BAAK;MACQA,sBAAK;MAAAA,iBAAS;MAG3BA,iEAEM;MAEVA,iBAAO;MACPA,iEAEM;MAEVA,iBAAM;;;MAzBIA,eAAuB;MAAvBA,yCAAuB;MAMmCA,eAAsB;MAAtBA,sCAAsB;MAIdA,eAAsB;MAAtBA,sCAAsB;MAMpFA,eAAgB;MAAhBA,qCAAgB;MAKpBA,eAAiB;MAAjBA,sCAAiB","names":["FormGroup","FormControl","Validators","i0","LoginComponent","constructor","auth","router","username","required","email","password","signUp","loginForm","value","subscribe","success","console","log","isLoggedIn","navigate","error","signUp1","ngOnInit","checkLogin","authenticate","invalidLogin","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\dharm\\JavaFullStack\\angular\\student3\\src\\app\\components\\login\\login.component.ts","C:\\Users\\dharm\\JavaFullStack\\angular\\student3\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl:'./login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent {\n\n  isLoggedIn = false;\n\n  public loginForm = new FormGroup({\n    username: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  });\n  \n  myfield = \"\";\n\n  constructor(private auth: AuthService, private router: Router){}\n\n  signUp(){\n    this.auth.signUp(this.loginForm.value).subscribe(success =>{\n      console.log(\"Login Successful \", success);\n      this.isLoggedIn = true;\n      this.router.navigate(['dashboard']);\n    },\n    error => {\n      console.log(\"Login Failed\", error);\n    });\n  }\n\n  signUp1(){\n    this.router.navigate(['dashboard']);\n  }\n\n  username = ''\n  password = ''\n  invalidLogin = false\n\n  // constructor(private router: Router,\n  //   private loginservice: AuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n  checkLogin() {\n    if (this.auth.authenticate(this.username, this.password)\n    ) {\n      this.router.navigate([''])\n      this.invalidLogin = false\n    } else\n      this.invalidLogin = true\n  }\n}\n\n\n\n// src\\app\\components\\dashboards\n","<div class=\"login-container\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"checkLogin()\">\n\n    <h2>Login</h2>\n\n        <div>\n            <label>Email: *</label>\n            <input id=\"name\" type=\"text\" formControlName=\"username\" [(ngModel)]=\"username\">\n        </div>\n        <div>\n            <label>Password: *</label>\n            <input id=\"password\" type=\"password\" formControlName=\"password\" [(ngModel)]=\"password\">\n        </div>\n        <div>\n            <button >Login</button>\n        </div>\n\n        <div *ngIf=\"isLoggedIn\">\n            <p>Login successful!</p>\n        </div>        \n\n    </form>\n    <div *ngIf=\"!isLoggedIn\">\n        <p>Login Failed!</p>\n    </div> \n    \n</div>\n\n\n\n\n\n\n\n\n\n\n\n<!-- \n<div class=\"login-container\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"signUp()\">\n\n    <h2>Login</h2>\n\n        <div>\n            <label>Email: *</label>\n            <input id=\"name\" type=\"text\" formControlName=\"username\">\n        </div>\n        <div>\n            <label>Password: *</label>\n            <input id=\"password\" type=\"password\" formControlName=\"password\">\n        </div>\n        <div>\n            <button [disabled]=\"!loginForm.valid\">SignUp</button>\n            \n        </div>\n        \n\n        <div *ngIf=\"isLoggedIn\">\n            <p>Login successful!</p>\n        </div>\n          \n        <div>\n            <p>OR</p>\n        </div>\n          \n          \n\n\n    </form>\n\n    <button (click)=\"signUp1()\">Sign Up!!</button>\n    \n</div>\n-->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}